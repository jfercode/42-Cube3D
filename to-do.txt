Program's name: cub3D
Every file needed. No additional folders neccessary.
May use: open, close, read, write, printf, malloc, free, perror, strerror, exit, gettimeofday, math lib, minilibx, libft

Requisites:
- (Window management (changing windows, minimazing, moving))
- Wall textures changes depending on the way they're facing (north, east, south, west) (needs four textures)
- Floor and ceiling are solid colors (RGB codes)
- (Movement with WASD), right and left arrows to rotate
- (ESC and cross exit the program CLEANLY)
- (If anything happens, the program returns Error\n + message and exits properly (clean most likely))

Parsing:
- (The map is only composed by 0 (empty), 1 (wall)), and NSEW (player's position, depending on where is it looking at the start)
- (Map must be closed by walls)
- (Map may contain spaces, up to you how to handle them (make them 0s))
- Textures and colors are specified with an identifier + path (NO, SO, WE, EA, F, C ./path)
- The textures and colors may be written in any order, with empty lines in between or with their elements separated by spaces.

Bonus:
- Wall collisions
- Minimap
- Functional doors
- Animated sprites
- Rotation with mouse


/*********************************************************************/

 Faltantes por implementar:

-    Validación de líneas de color (Floor y Ceiling):

        ft_validate_color_line está referenciada pero no definida aún.

            Parseo de colores en formato R,G,B

            Verificación de rangos 0–255 por componente

            Guardar en la estructura de cub3d

-    Ignorar o manejar líneas vacías correctamente:

        En ft_line_analisis, actualmente no manejas líneas completamente vacías o con solo espacios.

        Deberías retornarlas como válidas sin error.

-    Inicio del parseo de mapa (layout de paredes):

        Falta detectar cuándo empieza el mapa (primera línea con 1, 0, N, S, E, W)

        Falta guardar esas líneas en una estructura char **map o similar

-    Validaciones del mapa:

        Asegurar que esté rodeado de paredes

        Asegurar solo un punto de inicio (N, S, E, W)

        Validar que solo contiene caracteres válidos (0, 1, , \n, dirección inicial, etc.)

-    Control de errores duplicados o faltantes:

        Verifica que cada textura (NO, SO, WE, EA) y color (F, C) se defina solo una vez

        Verifica que no falte ninguna de estas definiciones antes de empezar el mapa

-    Liberación de memoria en casos de error:

        Actualmente haces free(line) pero asegúrate de liberar también estructuras internas de cub3d en caso de fallo.

-    Al final hacer un checker maestro de que TODO tiene que estar asignado